name: Benchmark Job

on:
  workflow_dispatch:
    inputs:
      leakDetectionLevel:
        description: "Leak detection level"
        required: true
        default: "disabled"
        type: choice
        options:
          - disabled
          - simple
          - advanced
          - paranoid
      consolidateFlush:
        description: "Consolidate Flush"
        required: true
        default: true
        type: boolean
      disableFlowControl:
        description: "Disable Flow Control"
        required: true
        default: true
        type: boolean

jobs:
  benchmark:
    strategy:
      matrix:
        os: [ centos ]
    runs-on: [ "${{ matrix.os }}", zio-http ]
    steps:
      - name: Clean up
        id: clean_up
        env:
          GITHUB_TOKEN: ${{secrets.ACTIONS_PAT}}
        run: sudo rm -rf *

      - name: Checkout ZIO-HTTP
        uses: actions/checkout@v2
        with:
          path: zio-http

      - name: Checkout FrameworkBenchmarks
        uses: actions/checkout@v2
        with:
          repository: dream11/FrameworkBenchmarks
          path: FrameworkBenchMarks
          ref: from-env

      - name: Gather COMMIT ID
        id: gather_commit_id
        working-directory: zio-http
        run: |
          pwd
          COMMIT=$(git rev-parse HEAD)
          echo ::set-output name=commit::$(echo $COMMIT)

      - name: Run Benchmark
        id: run_benchmark
        env:
          GITHUB_TOKEN: ${{secrets.ACTIONS_PAT}}
          LEAK_DETECTION_LEVEL: ${{ github.event.inputs.leakDetectionLevel }}
          CONSOLIDATE_FLUSH: ${{ github.event.inputs.consolidateFlush }}
          DISABLE_FLOW_CONTROL: ${{ github.event.inputs.disableFlowControl }}
        run: |
          cp ./zio-http/example/src/main/scala/example/PlainTextBenchmarkServer.scala ./FrameworkBenchMarks/frameworks/Scala/zio-http/src/main/scala/Main.scala
          cd ./FrameworkBenchMarks
          export LEAK_DETECTION_LEVEL=$LEAK_DETECTION_LEVEL
          export CONSOLIDATE_FLUSH=$CONSOLIDATE_FLUSH
          export DISABLE_FLOW_CONTROL=$DISABLE_FLOW_CONTROL
          sed -i "s+---COMMIT_SHA---+dream11/zio-http.git#${{steps.gather_commit_id.outputs.commit}}+g" frameworks/Scala/zio-http/build.sbt
          ./tfb  --test zio-http | tee result
          RESULT_REQUEST=$(echo $(grep -B 1 -A 17 "Concurrency: 256 for plaintext" result) | grep -oiE "requests/sec: [0-9]+.[0-9]+")
          RESULT_CONCURRENCY=$(echo $(grep -B 1 -A 17 "Concurrency: 256 for plaintext" result) | grep -oiE "concurrency: [0-9]+")
          echo ::set-output name=request_result::$(echo $RESULT_REQUEST)
          echo ::set-output name=concurrency_result::$(echo $RESULT_CONCURRENCY)

      - uses: peter-evans/commit-comment@v1
        with:
          sha: ${{steps.gather_commit_id.outputs.commit}}
          body: |

            **ðŸš€ Performance Benchmark:**

            ${{steps.run_benchmark.outputs.concurrency_result}}
            ${{steps.run_benchmark.outputs.request_result}}